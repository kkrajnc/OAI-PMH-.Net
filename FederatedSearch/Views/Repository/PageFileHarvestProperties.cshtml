@*     This file is part of OAI-PMH .Net.
*  
*      OAI-PMH .Net is free software: you can redistribute it and/or modify
*      it under the terms of the GNU General Public License as published by
*      the Free Software Foundation, either version 3 of the License, or
*      (at your option) any later version.
*  
*      OAI-PMH .Net is distributed in the hope that it will be useful,
*      but WITHOUT ANY WARRANTY; without even the implied warranty of
*      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*      GNU General Public License for more details.
*  
*      You should have received a copy of the GNU General Public License
*      along with OAI-PMH .Net.  If not, see <http://www.gnu.org/licenses/>.
*----------------------------------------------------------------------------*@

@model List<FederatedSearch.Models.PageFileHarvestProperties>
@using FederatedSearch.Controllers
@{
    ViewBag.Title = "Page File Harvest Properties";
    string baseLocalUrl = Common.GetBaseUrl(Html.ViewContext.RequestContext.HttpContext);
    var sectionList = ViewBag.SectionList as Dictionary<string, string> ?? new Dictionary<string, string>();
}

<h2>Properties</h2>
<hr style="margin-top: 0px; padding-top: 0px;" />


@if (Model != null && Model.Count > 0)
{
    <div id="propertiesTable">
        @foreach (var item in Model)
        {
            if (item != null)
            {
            <div class="panel panel-default">
                <div class="panel-body listItem">
                    <div class="row propertyWrapper">
                        <div class="col-md-10">
                            <div class="row" style="margin-bottom: 10px;">
                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <strong>Base URI:</strong>
                                        </div>
                                        <div class="col-md-9">
                                            <span data-name="BaseUri">@(item.BaseUri)</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <strong>1. Method:</strong>
                                        </div>
                                        <div class="col-md-7">
                                            <span data-name="FirstHttpMethod">@(item.FirstHttpMethod)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 10px;">
                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <strong>Line Regex:</strong>
                                        </div>
                                        <div class="col-md-9">
                                            <span data-name="LineRegex">@(item.LineRegex)</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <strong>2. Method:</strong>
                                        </div>
                                        <div class="col-md-7">
                                            <span data-name="SecondHttpMethod">@(item.SecondHttpMethod)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom: 10px;">
                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <strong>Value Regex:</strong>
                                        </div>
                                        <div class="col-md-9">
                                            <span data-name="ValueRegex">@(item.ValueRegex)</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <strong>Value option:</strong>
                                        </div>
                                        <div class="col-md-7">
                                            <span data-name="SecondTierValueOption">@(item.SecondTierValueOption)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="btn-group" style="width: 100%;">
                                <button type="button" style="width: 50%;" class="btn oaiBtn btn-default" onclick="editProperty(this)">Edit</button>
                                <button type="button" style="width: 50%;" class="btn oaiBtn btn-default" onclick="deleteProperty(this)">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            }
        }
    </div>
}
<div id="addProperty" class="panel panel-default">
    <div class="panel-body listItem">
        <div class="row propertyWrapper">
            <div class="col-md-10">
                <div class="row" style="margin-bottom: 10px;">
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-3">
                                <strong>Base URI:</strong>
                            </div>
                            <div class="col-md-9">
                                <span data-name="BaseUri"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="row">
                            <div class="col-md-5">
                                <strong>1. Method:</strong>
                            </div>
                            <div class="col-md-7">
                                <span data-name="FirstHttpMethod"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: 10px;">
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-3">
                                <strong>Line Regex:</strong>
                            </div>
                            <div class="col-md-9">
                                <span data-name="LineRegex"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="row">
                            <div class="col-md-5">
                                <strong>2. Method:</strong>
                            </div>
                            <div class="col-md-7">
                                <span data-name="SecondHttpMethod"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: 10px;">
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-3">
                                <strong>Value Regex:</strong>
                            </div>
                            <div class="col-md-9">
                                <span data-name="ValueRegex"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="row">
                            <div class="col-md-5">
                                <strong>Value option:</strong>
                            </div>
                            <div class="col-md-7">
                                <span data-name="SecondTierValueOption"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="btn-group" style="width: 100%;">
                    <button type="button" style="width: 100%;" class="btn oaiBtn btn-default" onclick="addProperty(this)">Add Property</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        var emptyObj = { BaseUri: '', FirstHttpMethod: '', SecondHttpMethod: '', LineRegex: '', ValueRegex: '', SecondTierValueOption: '' };
        setProperties($('#addProperty').children().eq(0), emptyObj, true, true);
    });

    function getPropertiesDiv(button) {
        return $(button).closest('div.propertyWrapper');//.parent('div').siblings('div').first();
    }

    function getProperties(propertiesDiv, isEditMode, isAddMode) {
        var properties = new Object();
        propertiesDiv.find('span').each(function () {
            var current = $(this);
            switch (current.data('name')) {
                case 'BaseUri':
                    properties.BaseUri = isAddMode ? current.children('input[type="text"]').val() : current.text().trim();
                    break;
                case 'FirstHttpMethod':
                    properties.FirstHttpMethod = isEditMode ? current.children('select').find(":selected").val() : current.text().trim();
                    break;
                case 'SecondHttpMethod':
                    properties.SecondHttpMethod = isEditMode ? current.children('select').find(":selected").val() : current.text().trim();
                    break;
                case 'LineRegex':
                    properties.LineRegex = isEditMode ? current.children('input[type="text"]').val() : current.text().trim();
                    break;
                case 'ValueRegex':
                    properties.ValueRegex = isEditMode ? current.children('input[type="text"]').val() : current.text().trim();
                    break;
                case 'SecondTierValueOption':
                    properties.SecondTierValueOption = isEditMode ? current.children('select').find(":selected").val() : current.text().trim();
                    break;
            }
        });
        return properties;
    }

    function getTextBox() {
        return $('<input>').prop('type', 'text').addClass('form-control');
    }
    function getMethodSelect() {
        return $('<select>').append('<option value="GET">GET</option>')
                            .append('<option value="POST">POST</option>')
         .append('</select>');
    }
    function getOptionSelect() {
        return $('<select>').append('<option value="ConcatenateURL">ConcatenateURL</option>')
                            .append('<option value="Key">Key</option>')
         .append('</select>');
    }

    function createSelect(baseSelect, selectedOpt) {
        baseSelect.addClass('form-control');
        baseSelect.children('option[value="' + selectedOpt + '"]').prop('selected', 'selected');
        return baseSelect
    }

    function setProperties(propertiesDiv, properties, isEditMode, initAdd) {
        propertiesDiv.find('span').each(function () {
            var current = $(this);
            switch (current.data('name')) {
                case 'BaseUri':
                    initAdd ? current.empty().append(getTextBox()) : current.text(properties.BaseUri);
                    break;
                case 'FirstHttpMethod':
                    isEditMode ? current.empty().append(createSelect(getMethodSelect(), properties.FirstHttpMethod)) :
                        current.text(properties.FirstHttpMethod);
                    break;
                case 'SecondHttpMethod':
                    isEditMode ? current.empty().append(createSelect(getMethodSelect(), properties.SecondHttpMethod)) :
                        current.text(properties.SecondHttpMethod);
                    break;
                case 'LineRegex':
                    isEditMode ? current.empty().append(getTextBox().val(properties.LineRegex)) : current.text(properties.LineRegex);
                    break;
                case 'ValueRegex':
                    isEditMode ? current.empty().append(getTextBox().val(properties.ValueRegex)) : current.text(properties.ValueRegex);
                    break;
                case 'SecondTierValueOption':
                    isEditMode ? current.empty().append(createSelect(getOptionSelect(), properties.SecondTierValueOption)) :
                        current.text(properties.SecondTierValueOption);
                    break;
            }
        });

        return propertiesDiv;
    }

    function findPropertiesDiv(BaseUri) {
        var propertiesDiv;
        $('#propertiesTable').find('span[data-name="BaseUri"]').each(function () {
            if ($(this).text().trim() == BaseUri) {
                propertiesDiv = $(this).closest('div.propertyWrapper');//.parent('div').parent('div').parent('div').parent('div').parent('div');
            }
        });
        return propertiesDiv;
    }

    function addedProperty(data) {
        switch (data.status) {
            case 'ok':
                var divClone = $('#addProperty').clone(false);
                divClone.find('.btn-group').empty().append(
                    '<button type="button" style="width: 50%;" class="btn oaiBtn btn-default" onclick="editProperty(this)">Edit</button>' +
                    '<button type="button" style="width: 50%;" class="btn oaiBtn btn-default" onclick="deleteProperty(this)">Delete</button>');
                divClone.prop('id', null);
                $('#propertiesTable').append(setProperties(divClone, data.properties, false, false));
                $('#addProperty').find('input').val('');
                $('#addProperty').find('select').children('option:first').prop('selected', 'selected');
                break;
            case 'failure':
                break;
        }
    }

    function addProperty(button) {
        var propertiesDiv = getPropertiesDiv(button);
        var properties = getProperties(propertiesDiv, true, true);
        jsonRequest(
            '@baseLocalUrl/Repository/PageFileHarvestProperties/AddOrUpdate',
            JSON.stringify(properties)
        ).done(addedProperty);
    }

    function editedProperty(data) {
        switch (data.status) {
            case 'ok':
                var propertiesDiv = findPropertiesDiv(data.properties.BaseUri);
                setProperties(propertiesDiv, data.properties, false);
                propertiesDiv.find('button:contains(Save)').text('Edit');
                propertiesDiv.find('button:contains(Cancel)').text('Delete');
                break;
            case 'failure':
                break;
        }
    }

    function editProperty(button) {
        var propertiesDiv = getPropertiesDiv(button);
        switch ($(button).text()) {
            case 'Edit':
                var properties = getProperties(propertiesDiv, false);
                $(button).text('Save');
                $(button).siblings().text('Cancel');
                setProperties(propertiesDiv, properties, true);
                break;
            case 'Save':
                var properties = getProperties(propertiesDiv, true);
                jsonRequest(
                    '@baseLocalUrl/Repository/PageFileHarvestProperties/AddOrUpdate',
                    JSON.stringify(properties)
                ).done(editedProperty);
                    break;
            }
        }

        function deletedProperty(data) {
            var propertiesDiv = findPropertiesDiv(data.BaseUri);
            propertiesDiv.parent('div').parent('div').remove();
        }

        function deleteProperty(button) {
            var propertiesDiv = getPropertiesDiv(button);
            switch ($(button).text()) {
                case 'Delete':
                    jsonRequest(
                        '@baseLocalUrl/Repository/PageFileHarvestProperties/Delete',
                    JSON.stringify({
                        BaseUri: propertiesDiv.find('span[data-name="BaseUri"]').text().trim()
                    })
                ).done(deletedProperty);
            break;
        case 'Cancel':
            var properties = getProperties(propertiesDiv, true);
            setProperties(propertiesDiv, properties, false);
            $(button).siblings().text('Edit');
            $(button).text('Delete');
            break;
    }
}

</script>
<script src="@Url.Content("~/Scripts/CommonOAI.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
