@*     This file is part of OAI-PMH .Net.
*  
*      OAI-PMH .Net is free software: you can redistribute it and/or modify
*      it under the terms of the GNU General Public License as published by
*      the Free Software Foundation, either version 3 of the License, or
*      (at your option) any later version.
*  
*      OAI-PMH .Net is distributed in the hope that it will be useful,
*      but WITHOUT ANY WARRANTY; without even the implied warranty of
*      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*      GNU General Public License for more details.
*  
*      You should have received a copy of the GNU General Public License
*      along with OAI-PMH .Net.  If not, see <http://www.gnu.org/licenses/>.
*----------------------------------------------------------------------------*@

@model Dictionary<string, List<FederatedSearch.Models.OAISetting>>
@using FederatedSearch.Controllers
@{
    ViewBag.Title = "Properties";
    string baseLocalUrl = Common.GetBaseUrl(Html.ViewContext.RequestContext.HttpContext);
    var sectionList = ViewBag.SectionList as Dictionary<string, string> ?? new Dictionary<string, string>();
}

<h2>Properties</h2>
<hr style="margin-top: 0px; padding-top: 0px;" />

<select id="propertySectionList" style="display: none">
    @foreach (var section in sectionList)
    {
        <option value="@(section.Key)">@(section.Value)</option>
    }
</select>
@*<div class="panel panel-default">*@
<div class="panel-group" id="accordion">
    @if (Model != null && Model.Count > 0)
    {
        foreach (var item in Model)
        {
        <div class="panel panel-default">
            <div class="panel-heading" onclick="toggleCollapse('#collapse@(item.Key)')">
                <h4 class="panel-title">
                    @(sectionList[item.Key])
                </h4>
            </div>
            <div id="collapse@(item.Key)" class="panel-collapse collapse">
                <div class="panel panel-default" style="border-top-right-radius: 0px; border-top-left-radius: 0px;">
                    <table id="propertiesTable@(item.Key)" class="table table-striped table-condensed" 
                        data-section="@(item.Key)">
                        <thead>
                            <tr>
                                <th class="col-md-2">Name
                                </th>
                                <th class="col-md-8" colspan="2">Value
                                </th>
                                <th class="col-md-2"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var prop in item.Value)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => prop.Key)
                                    </td>
                                    <td colspan="2">
                                        @Html.DisplayFor(modelItem => prop.Value)
                                    </td>
                                    <td>
                                        <div class="btn-group" style="width: 100%;">
                                            <button type="button" style="width: 50%;" class="btn oaiBtn btn-default" onclick="editProperty(this)">Edit</button>
                                            <button type="button" style="width: 50%;" class="btn oaiBtn btn-default" onclick="deleteProperty(this)">Delete</button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr></tr>
                            <tr>
                                <td>
                                    <input type="text" class="form-control" placeholder="Name" />
                                </td>
                                <td>
                                    <input type="text" class="form-control" placeholder="Value" />
                                </td>
                                <td></td>
                                <td>
                                    <div class="btn-group" style="width: 100%;">
                                        <button type="button" style="width: 100%;" class="btn oaiBtn btn-default" onclick="addProperty(this)">Add Property</button>
                                    </div>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
        }
    }
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $('table[id^="propertiesTable"] > tfoot > tr > td:nth-child(3)').each(function () {
            appendSelectionList($(this), $(this).parent('tr').parent('tfoot').parent('table').data('section'));
        });
    });

    function toggleCollapse(panelId) {
        $(panelId).collapse('toggle');
    }

    function getButtonRow(button) {
        return $(button).parent('div').parent('td').parent('tr');
    }

    function getSectionName(row) {
        return row.parent('tbody').parent('table').data('section');
    }

    function setHeaderSectionText(text) {
        row.parent('tbody').siblings('thead').children('tr').children('th:nth-child(3)').text(text);
    }

    function appendSelectionList(target, currentSection) {
        var options = $("#propertySectionList > option").clone();
        var sel = $('<select>').appendTo(target);
        sel.addClass('form-control');
        options.each(function () {
            if ($(this).val() == currentSection) {
                $(this).prop('selected', 'selected');
                sel.data('oldSection', $(this).val());
            }
        });
        sel.append(options);
    }

    function addedProperty(data) {
        switch (data.status) {
            case 'ok':
                $('#propertiesTable' + data.section + ' > tbody').append(
                    '<tr><td>' + data.name + '</td>' +
                    '<td colspan="2">' + $('<div/>').text(data.value).html() + '</td>' +
                    '<td><div class="btn-group" style="width: 100%;">' +
                        '<button type="button" style="width: 50%;" class="btn oaiBtn btn-default" onclick="editProperty(this)">Edit</button>' +
                        '<button type="button" style="width: 50%;" class="btn oaiBtn btn-default" onclick="deleteProperty(this)">Delete</button>' +
                    '</div></td></tr>');
                if (data.section != data.oldSection) {
                    var tds = $('#propertiesTable' + data.oldSection + ' > tfoot > tr > td');
                    tds.children('input[type="text"]').val('');
                    tds.children('select').children('option').each(function () {
                        if ($(this).val() == data.oldSection) {
                            $(this).prop('selected', 'selected');
                        }
                    });
                }
                else {
                    $('#propertiesTable' + data.section + ' > tfoot > tr > td').children('input[type="text"]').val('');
                }
                break;
            case 'failure':
                break;
        }
    }

    function addProperty(button) {
        var row = getButtonRow(button);
        jsonRequest(
            '@baseLocalUrl/Repository/Properties/AddOrUpdate',
            JSON.stringify({
                name: row.children('td:nth-child(1)').children('input[type="text"]').val(),
                value: row.children('td:nth-child(2)').children('input[type="text"]').val(),
                section: row.children('td:nth-child(3)').children('select').find(":selected").val(),
                oldSection: row.children('td:nth-child(3)').children('select').data('oldSection')
            })
        ).done(addedProperty);
    }

    function editedProperty(data) {
        switch (data.status) {
            case 'ok':
                if (data.section != data.oldSection) {
                    addedProperty(data);
                    data.section = data.oldSection;
                    deletedProperty(data);
                }
                else {
                    $('#propertiesTable' + data.section + ' > tbody > tr').each(function () {
                        if ($(this).find('td:eq(0)').text().trim() == data.name) {
                            $(this).children('td:nth-child(2)').html($('<div/>').text(data.value).html()).prop('colspan', 2);
                            $(this).children('td:nth-child(3)').remove();
                            $(this).children('td:nth-child(3)').children('div').children('button:contains(Save)').text('Edit');
                            $(this).children('td:nth-child(3)').children('div').children('button:contains(Cancel)').text('Delete');
                        }
                    });
                }
                break;
            case 'failure':
                break;
        }
    }

    function editProperty(button) {
        var row = getButtonRow(button);
        switch ($(button).text()) {
            case 'Edit':
                $(button).text('Save');
                $(button).siblings().text('Cancel');
                var currentValue = row.children('td:nth-child(2)').text().trim();
                var txtBox = $('<input>').appendTo(row.children('td:nth-child(2)').empty().prop('colspan', '').after('<td></td>'));
                txtBox.prop('type', 'text');
                txtBox.addClass('form-control');
                txtBox.val(currentValue);
                txtBox.data('currentValue', currentValue);
                
                appendSelectionList(row.children('td:nth-child(3)'), getSectionName(row));
                //setHeaderSectionText('Section');
                break;
            case 'Save':
                jsonRequest(
                    '@baseLocalUrl/Repository/Properties/AddOrUpdate',
                    JSON.stringify({
                        name: row.children('td:nth-child(1)').text().trim(),
                        value: row.children('td:nth-child(2)').children('input[type="text"]').val(),
                        section: row.children('td:nth-child(3)').children('select').find(":selected").val(),
                        oldSection: row.children('td:nth-child(3)').children('select').data('oldSection')
                    })
                ).done(editedProperty);
                    break;

            }
        }

        function deletedProperty(data) {
            $('#propertiesTable' + data.section + ' > tbody > tr').each(function () {
                if ($(this).find('td:eq(0)').text().trim() == data.name) {
                    $(this).remove();
                }
            });
        }

        function deleteProperty(button) {
            switch ($(button).text()) {
                case 'Delete':
                    var row = getButtonRow(button);
                    jsonRequest(
                        '@baseLocalUrl/Repository/Properties/Delete',
                    JSON.stringify({
                        name: row.children('td:nth-child(1)').text().trim(),
                        section: getSectionName(row)
                    })
                ).done(deletedProperty);
                    break;
                case 'Cancel':
                    var row = getButtonRow(button);
                    var currentValue = row.children('td:nth-child(2)').children('input[type="text"]').data('currentValue');
                    row.children('td:nth-child(2)').html(currentValue).prop('colspan', 2);
                    row.children('td:nth-child(3)').remove();
                    $(button).siblings().text('Edit');
                    $(button).text('Delete');
                    setHeaderSectionText('');
                    break;
            }
        }

</script>
<script src="@Url.Content("~/Scripts/CommonOAI.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
